version: "3.5"
services:
  grpc-proxy:
    depends_on:
      - coherence1
      - coherence2
    image: traefik:latest
    command: --api.insecure=true --providers.docker --entrypoints.other.address=:1408  --log.level=DEBUG
    ports:
      - "8080:8080"
      - "1408:1408"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      coherence:
        aliases:
          - proxy

  coherence1:
    hostname: machine1
    networks:
      coherence:
        aliases:
          - machine1
    image: ghcr.io/oracle/coherence-ce:24.03
    environment:
      - coherence.cluster=cluster1
      - coherence.member=member1
      - coherence.machine=machine1
      - coherence.wka=machine1
      - coherence.health.http.port=6676
      - coherence.management.http=all
    ports:
      - 30000:30000
    labels:
      - "traefik.enable=true"
      - "traefik.TCP.Routers.coherence2.Rule=HostSNI(`*`)"
      - "traefik.TCP.Services.coherence2.LoadBalancer.server.Port=1408"
      - "traefik.http.services.coherence2.loadbalancer.healthcheck.path=/ready"
      - "traefik.http.services.coherence2.loadbalancer.healthcheck.port=6676"

  coherence2:
    hostname: machine2
    networks:
      coherence:
        aliases:
          - machine2
    image: ghcr.io/oracle/coherence-ce:24.03
    environment:
      - coherence.cluster=cluster1
      - coherence.member=member2
      - coherence.machine=machine1
      - coherence.health.http.port=6676
      - coherence.wka=machine1
      - coherence.management=all
      - coherence.grpc.server.port=1408
    labels:
      - "traefik.enable=true"
      - "traefik.TCP.Routers.coherence2.Rule=HostSNI(`*`)"
      - "traefik.TCP.Services.coherence2.LoadBalancer.server.Port=1408"
      - "traefik.http.services.coherence2.loadbalancer.healthcheck.path=/ready"
      - "traefik.http.services.coherence2.loadbalancer.healthcheck.port=6676"

networks:
  coherence:
